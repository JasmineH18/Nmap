I've already practiced Nmap in Tryhackme (https://tryhackme.com/room/furthernmap) and will do this project on Kali Linux virtual machine from VirtualBox. Below are the resources and environments I'm using.

Resources Used:
-https://www.virtualbox.org/wiki/Downloads
-https://www.kali.org/get-kali/#kali-platforms
-Networkchuck https://www.youtube.com/watch?v=4t4kBkMsDbQ
-https://nmap.org/book/man.html

Environments Used:
-Kali Linux in Virtualbox

Started Kali Linux virtual machine and opened Nmap. This project will be on port scanning using Nmap.

Opened an extra for nmap manual. This will list all the commands I can use and the description for it. Screenshot https://imgur.com/mBIUIob
In the terminal:
man nmap

Another option for shorten information as a guide. Screenshot https://imgur.com/tsVmjxz 
In the terminal:
nmap --help

Checked for live systems.

I will be using one of Nmap's IP address that is allowed to be used. From Nmap reference guide in the description section, I'll be using Example 15.1 to get an IP address to use. Start with scanning 'scanme.nmap.org'.  

In the terminal:
nmap -A -T4 scanme.nmap.org

-A will enable OS detection, version detection, script scanning, and traceroute
-T4 will speed up the scanning process

Screenshot: https://imgur.com/eEYKXD8

Nmap provided an IP address I can use, which is 45.33.32.156. I ping the IP address to make sure the host is up and running. 'ping' sends ICMP ECHO_REQUEST to network hosts and will see if it'll get an ICMP ECHO_RESPONSE from a host or gateway.

In the terminal:
ping 45.33.32.156

The ping was a success! 
Screenshot: https://imgur.com/FvxLoW8


I can also ping multiple devices. 
45.33.32.156/24 could have 254 hosts or endpoints

Pinging 254 devices can take a long time to scan, but there's a way to scan it in a short amount of time.

In the terminal:
nmap -sP 45.33.32.156/24

-sP will skip the port scanning after host discovery and show available host that responded to the scan. It's also known as ping scan.

The scan show 109 hosts are up and running.

Screenshots: https://imgur.com/LuINzpB, https://imgur.com/KlBfLfy


Check for open ports

I check all the devices to see if a webserver is up and running.
In the terminal:
sudo nmap -sT -p 80, 443 45.33.32.156/24

-sT is a TCP connect scan.
-p will only scan specified ports.

Examples: https://imgur.com/VlS4pQZ ,https://imgur.com/dQ2PSvL
45.33.32.66 show port 80 is open
45.33.32.67 show port 80 is open
45.33.32.68 show port 80 is filtered.

open: An open port means that the target system is actively accepting connections on that specific port. This could indicate that a service or application is running and accessible on that port.

filtered: A filtered port means that Nmap was unable to determine whether the port is open or closed due to filtering mechanisms such as firewalls or access control lists. This could indicate that the port is being protected and not directly accessible.

closed: A closed port means that the target system actively responded with a TCP RST packet, indicating that no service is listening on that port.

unfiltered: An unfiltered port means that Nmap was able to determine that the port is neither open nor closed, suggesting that the port is accessible but not actively accepting connections.





